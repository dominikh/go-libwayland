// Code generated by "stringer -type ShmFormat"; DO NOT EDIT.

package wayland

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ShmFormatArgb8888-0]
	_ = x[ShmFormatXrgb8888-1]
	_ = x[ShmFormatC8-538982467]
	_ = x[ShmFormatRgb332-943867730]
	_ = x[ShmFormatBgr233-944916290]
	_ = x[ShmFormatXrgb4444-842093144]
	_ = x[ShmFormatXbgr4444-842089048]
	_ = x[ShmFormatRgbx4444-842094674]
	_ = x[ShmFormatBgrx4444-842094658]
	_ = x[ShmFormatArgb4444-842093121]
	_ = x[ShmFormatAbgr4444-842089025]
	_ = x[ShmFormatRgba4444-842088786]
	_ = x[ShmFormatBgra4444-842088770]
	_ = x[ShmFormatXrgb1555-892424792]
	_ = x[ShmFormatXbgr1555-892420696]
	_ = x[ShmFormatRgbx5551-892426322]
	_ = x[ShmFormatBgrx5551-892426306]
	_ = x[ShmFormatArgb1555-892424769]
	_ = x[ShmFormatAbgr1555-892420673]
	_ = x[ShmFormatRgba5551-892420434]
	_ = x[ShmFormatBgra5551-892420418]
	_ = x[ShmFormatRgb565-909199186]
	_ = x[ShmFormatBgr565-909199170]
	_ = x[ShmFormatRgb888-875710290]
	_ = x[ShmFormatBgr888-875710274]
	_ = x[ShmFormatXbgr8888-875709016]
	_ = x[ShmFormatRgbx8888-875714642]
	_ = x[ShmFormatBgrx8888-875714626]
	_ = x[ShmFormatAbgr8888-875708993]
	_ = x[ShmFormatRgba8888-875708754]
	_ = x[ShmFormatBgra8888-875708738]
	_ = x[ShmFormatXrgb2101010-808669784]
	_ = x[ShmFormatXbgr2101010-808665688]
	_ = x[ShmFormatRgbx1010102-808671314]
	_ = x[ShmFormatBgrx1010102-808671298]
	_ = x[ShmFormatArgb2101010-808669761]
	_ = x[ShmFormatAbgr2101010-808665665]
	_ = x[ShmFormatRgba1010102-808665426]
	_ = x[ShmFormatBgra1010102-808665410]
	_ = x[ShmFormatYuyv-1448695129]
	_ = x[ShmFormatYvyu-1431918169]
	_ = x[ShmFormatUyvy-1498831189]
	_ = x[ShmFormatVyuy-1498765654]
	_ = x[ShmFormatAyuv-1448433985]
	_ = x[ShmFormatNv12-842094158]
	_ = x[ShmFormatNv21-825382478]
	_ = x[ShmFormatNv16-909203022]
	_ = x[ShmFormatNv61-825644622]
	_ = x[ShmFormatYuv410-961959257]
	_ = x[ShmFormatYvu410-961893977]
	_ = x[ShmFormatYuv411-825316697]
	_ = x[ShmFormatYvu411-825316953]
	_ = x[ShmFormatYuv420-842093913]
	_ = x[ShmFormatYvu420-842094169]
	_ = x[ShmFormatYuv422-909202777]
	_ = x[ShmFormatYvu422-909203033]
	_ = x[ShmFormatYuv444-875713881]
	_ = x[ShmFormatYvu444-875714137]
	_ = x[ShmFormatR8-538982482]
	_ = x[ShmFormatR16-540422482]
	_ = x[ShmFormatRg88-943212370]
	_ = x[ShmFormatGr88-943215175]
	_ = x[ShmFormatRg1616-842221394]
	_ = x[ShmFormatGr1616-842224199]
	_ = x[ShmFormatXrgb16161616f-1211388504]
	_ = x[ShmFormatXbgr16161616f-1211384408]
	_ = x[ShmFormatArgb16161616f-1211388481]
	_ = x[ShmFormatAbgr16161616f-1211384385]
	_ = x[ShmFormatXyuv8888-1448434008]
	_ = x[ShmFormatVuy888-875713878]
	_ = x[ShmFormatVuy101010-808670550]
	_ = x[ShmFormatY210-808530521]
	_ = x[ShmFormatY212-842084953]
	_ = x[ShmFormatY216-909193817]
	_ = x[ShmFormatY410-808531033]
	_ = x[ShmFormatY412-842085465]
	_ = x[ShmFormatY416-909194329]
	_ = x[ShmFormatXvyu2101010-808670808]
	_ = x[ShmFormatXvyu12_16161616-909334104]
	_ = x[ShmFormatXvyu16161616-942954072]
	_ = x[ShmFormatY0l0-810299481]
	_ = x[ShmFormatX0l0-810299480]
	_ = x[ShmFormatY0l2-843853913]
	_ = x[ShmFormatX0l2-843853912]
	_ = x[ShmFormatYuv420_8bit-942691673]
	_ = x[ShmFormatYuv420_10bit-808539481]
	_ = x[ShmFormatXrgb8888_a8-943805016]
	_ = x[ShmFormatXbgr8888_a8-943800920]
	_ = x[ShmFormatRgbx8888_a8-943806546]
	_ = x[ShmFormatBgrx8888_a8-943806530]
	_ = x[ShmFormatRgb888_a8-943798354]
	_ = x[ShmFormatBgr888_a8-943798338]
	_ = x[ShmFormatRgb565_a8-943797586]
	_ = x[ShmFormatBgr565_a8-943797570]
	_ = x[ShmFormatNv24-875714126]
	_ = x[ShmFormatNv42-842290766]
	_ = x[ShmFormatP210-808530512]
	_ = x[ShmFormatP010-808530000]
	_ = x[ShmFormatP012-842084432]
	_ = x[ShmFormatP016-909193296]
	_ = x[ShmFormatAxbxgxrx106106106106-808534593]
	_ = x[ShmFormatNv15-892425806]
	_ = x[ShmFormatQ410-808531025]
	_ = x[ShmFormatQ401-825242705]
	_ = x[ShmFormatXrgb16161616-942953048]
	_ = x[ShmFormatXbgr16161616-942948952]
	_ = x[ShmFormatArgb16161616-942953025]
	_ = x[ShmFormatAbgr16161616-942948929]
}

const _ShmFormat_name = "ShmFormatArgb8888ShmFormatXrgb8888ShmFormatC8ShmFormatR8ShmFormatR16ShmFormatP010ShmFormatP210ShmFormatY210ShmFormatQ410ShmFormatY410ShmFormatAxbxgxrx106106106106ShmFormatYuv420_10bitShmFormatBgra1010102ShmFormatRgba1010102ShmFormatAbgr2101010ShmFormatXbgr2101010ShmFormatArgb2101010ShmFormatXrgb2101010ShmFormatVuy101010ShmFormatXvyu2101010ShmFormatBgrx1010102ShmFormatRgbx1010102ShmFormatX0l0ShmFormatY0l0ShmFormatQ401ShmFormatYuv411ShmFormatYvu411ShmFormatNv21ShmFormatNv61ShmFormatP012ShmFormatY212ShmFormatY412ShmFormatBgra4444ShmFormatRgba4444ShmFormatAbgr4444ShmFormatXbgr4444ShmFormatArgb4444ShmFormatXrgb4444ShmFormatYuv420ShmFormatNv12ShmFormatYvu420ShmFormatBgrx4444ShmFormatRgbx4444ShmFormatRg1616ShmFormatGr1616ShmFormatNv42ShmFormatX0l2ShmFormatY0l2ShmFormatBgra8888ShmFormatRgba8888ShmFormatAbgr8888ShmFormatXbgr8888ShmFormatBgr888ShmFormatRgb888ShmFormatVuy888ShmFormatYuv444ShmFormatNv24ShmFormatYvu444ShmFormatBgrx8888ShmFormatRgbx8888ShmFormatBgra5551ShmFormatRgba5551ShmFormatAbgr1555ShmFormatXbgr1555ShmFormatArgb1555ShmFormatXrgb1555ShmFormatNv15ShmFormatBgrx5551ShmFormatRgbx5551ShmFormatP016ShmFormatY216ShmFormatY416ShmFormatBgr565ShmFormatRgb565ShmFormatYuv422ShmFormatNv16ShmFormatYvu422ShmFormatXvyu12_16161616ShmFormatYuv420_8bitShmFormatAbgr16161616ShmFormatXbgr16161616ShmFormatArgb16161616ShmFormatXrgb16161616ShmFormatXvyu16161616ShmFormatRg88ShmFormatGr88ShmFormatBgr565_a8ShmFormatRgb565_a8ShmFormatBgr888_a8ShmFormatRgb888_a8ShmFormatXbgr8888_a8ShmFormatXrgb8888_a8ShmFormatBgrx8888_a8ShmFormatRgbx8888_a8ShmFormatRgb332ShmFormatBgr233ShmFormatYvu410ShmFormatYuv410ShmFormatAbgr16161616fShmFormatXbgr16161616fShmFormatArgb16161616fShmFormatXrgb16161616fShmFormatYvyuShmFormatAyuvShmFormatXyuv8888ShmFormatYuyvShmFormatVyuyShmFormatUyvy"

var _ShmFormat_map = map[ShmFormat]string{
	0:          _ShmFormat_name[0:17],
	1:          _ShmFormat_name[17:34],
	538982467:  _ShmFormat_name[34:45],
	538982482:  _ShmFormat_name[45:56],
	540422482:  _ShmFormat_name[56:68],
	808530000:  _ShmFormat_name[68:81],
	808530512:  _ShmFormat_name[81:94],
	808530521:  _ShmFormat_name[94:107],
	808531025:  _ShmFormat_name[107:120],
	808531033:  _ShmFormat_name[120:133],
	808534593:  _ShmFormat_name[133:162],
	808539481:  _ShmFormat_name[162:183],
	808665410:  _ShmFormat_name[183:203],
	808665426:  _ShmFormat_name[203:223],
	808665665:  _ShmFormat_name[223:243],
	808665688:  _ShmFormat_name[243:263],
	808669761:  _ShmFormat_name[263:283],
	808669784:  _ShmFormat_name[283:303],
	808670550:  _ShmFormat_name[303:321],
	808670808:  _ShmFormat_name[321:341],
	808671298:  _ShmFormat_name[341:361],
	808671314:  _ShmFormat_name[361:381],
	810299480:  _ShmFormat_name[381:394],
	810299481:  _ShmFormat_name[394:407],
	825242705:  _ShmFormat_name[407:420],
	825316697:  _ShmFormat_name[420:435],
	825316953:  _ShmFormat_name[435:450],
	825382478:  _ShmFormat_name[450:463],
	825644622:  _ShmFormat_name[463:476],
	842084432:  _ShmFormat_name[476:489],
	842084953:  _ShmFormat_name[489:502],
	842085465:  _ShmFormat_name[502:515],
	842088770:  _ShmFormat_name[515:532],
	842088786:  _ShmFormat_name[532:549],
	842089025:  _ShmFormat_name[549:566],
	842089048:  _ShmFormat_name[566:583],
	842093121:  _ShmFormat_name[583:600],
	842093144:  _ShmFormat_name[600:617],
	842093913:  _ShmFormat_name[617:632],
	842094158:  _ShmFormat_name[632:645],
	842094169:  _ShmFormat_name[645:660],
	842094658:  _ShmFormat_name[660:677],
	842094674:  _ShmFormat_name[677:694],
	842221394:  _ShmFormat_name[694:709],
	842224199:  _ShmFormat_name[709:724],
	842290766:  _ShmFormat_name[724:737],
	843853912:  _ShmFormat_name[737:750],
	843853913:  _ShmFormat_name[750:763],
	875708738:  _ShmFormat_name[763:780],
	875708754:  _ShmFormat_name[780:797],
	875708993:  _ShmFormat_name[797:814],
	875709016:  _ShmFormat_name[814:831],
	875710274:  _ShmFormat_name[831:846],
	875710290:  _ShmFormat_name[846:861],
	875713878:  _ShmFormat_name[861:876],
	875713881:  _ShmFormat_name[876:891],
	875714126:  _ShmFormat_name[891:904],
	875714137:  _ShmFormat_name[904:919],
	875714626:  _ShmFormat_name[919:936],
	875714642:  _ShmFormat_name[936:953],
	892420418:  _ShmFormat_name[953:970],
	892420434:  _ShmFormat_name[970:987],
	892420673:  _ShmFormat_name[987:1004],
	892420696:  _ShmFormat_name[1004:1021],
	892424769:  _ShmFormat_name[1021:1038],
	892424792:  _ShmFormat_name[1038:1055],
	892425806:  _ShmFormat_name[1055:1068],
	892426306:  _ShmFormat_name[1068:1085],
	892426322:  _ShmFormat_name[1085:1102],
	909193296:  _ShmFormat_name[1102:1115],
	909193817:  _ShmFormat_name[1115:1128],
	909194329:  _ShmFormat_name[1128:1141],
	909199170:  _ShmFormat_name[1141:1156],
	909199186:  _ShmFormat_name[1156:1171],
	909202777:  _ShmFormat_name[1171:1186],
	909203022:  _ShmFormat_name[1186:1199],
	909203033:  _ShmFormat_name[1199:1214],
	909334104:  _ShmFormat_name[1214:1238],
	942691673:  _ShmFormat_name[1238:1258],
	942948929:  _ShmFormat_name[1258:1279],
	942948952:  _ShmFormat_name[1279:1300],
	942953025:  _ShmFormat_name[1300:1321],
	942953048:  _ShmFormat_name[1321:1342],
	942954072:  _ShmFormat_name[1342:1363],
	943212370:  _ShmFormat_name[1363:1376],
	943215175:  _ShmFormat_name[1376:1389],
	943797570:  _ShmFormat_name[1389:1407],
	943797586:  _ShmFormat_name[1407:1425],
	943798338:  _ShmFormat_name[1425:1443],
	943798354:  _ShmFormat_name[1443:1461],
	943800920:  _ShmFormat_name[1461:1481],
	943805016:  _ShmFormat_name[1481:1501],
	943806530:  _ShmFormat_name[1501:1521],
	943806546:  _ShmFormat_name[1521:1541],
	943867730:  _ShmFormat_name[1541:1556],
	944916290:  _ShmFormat_name[1556:1571],
	961893977:  _ShmFormat_name[1571:1586],
	961959257:  _ShmFormat_name[1586:1601],
	1211384385: _ShmFormat_name[1601:1623],
	1211384408: _ShmFormat_name[1623:1645],
	1211388481: _ShmFormat_name[1645:1667],
	1211388504: _ShmFormat_name[1667:1689],
	1431918169: _ShmFormat_name[1689:1702],
	1448433985: _ShmFormat_name[1702:1715],
	1448434008: _ShmFormat_name[1715:1732],
	1448695129: _ShmFormat_name[1732:1745],
	1498765654: _ShmFormat_name[1745:1758],
	1498831189: _ShmFormat_name[1758:1771],
}

func (i ShmFormat) String() string {
	if str, ok := _ShmFormat_map[i]; ok {
		return str
	}
	return "ShmFormat(" + strconv.FormatInt(int64(i), 10) + ")"
}
